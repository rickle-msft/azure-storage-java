/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.azure.storage.file.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import com.microsoft.rest.v2.DateTimeRfc1123;
import java.time.OffsetDateTime;

/**
 * Defines headers for CreateSnapshot operation.
 */
@JacksonXmlRootElement(localName = "Share-CreateSnapshot-Headers")
public final class ShareCreateSnapshotHeaders {
    /**
     * This header is a DateTime value that uniquely identifies the share
     * snapshot. The value of this header may be used in subsequent requests to
     * access the share snapshot. This value is opaque.
     */
    @JsonProperty(value = "x-ms-snapshot")
    private String snapshot;

    /**
     * The ETag contains a value which represents the version of the share
     * snapshot, in quotes. A share snapshot cannot be modified, so the ETag of
     * a given share snapshot never changes. However, if new metadata was
     * supplied with the Snapshot Share request then the ETag of the share
     * snapshot differs from that of the base share. If no metadata was
     * specified with the request, the ETag of the share snapshot is identical
     * to that of the base share at the time the share snapshot was taken.
     */
    @JsonProperty(value = "ETag")
    private String eTag;

    /**
     * Returns the date and time the share was last modified. A share snapshot
     * cannot be modified, so the last modified time of a given share snapshot
     * never changes. However, if new metadata was supplied with the Snapshot
     * Share request then the last modified time of the share snapshot differs
     * from that of the base share. If no metadata was specified with the
     * request, the last modified time of the share snapshot is identical to
     * that of the base share at the time the share snapshot was taken.
     */
    @JsonProperty(value = "Last-Modified")
    private DateTimeRfc1123 lastModified;

    /**
     * This header uniquely identifies the request that was made and can be
     * used for troubleshooting the request.
     */
    @JsonProperty(value = "x-ms-request-id")
    private String requestId;

    /**
     * Indicates the version of the File service used to execute the request.
     */
    @JsonProperty(value = "x-ms-version")
    private String version;

    /**
     * A UTC date/time value generated by the service that indicates the time
     * at which the response was initiated.
     */
    @JsonProperty(value = "Date")
    private DateTimeRfc1123 date;

    /**
     * Get the snapshot value.
     *
     * @return the snapshot value.
     */
    public String snapshot() {
        return this.snapshot;
    }

    /**
     * Set the snapshot value.
     *
     * @param snapshot the snapshot value to set.
     * @return the ShareCreateSnapshotHeaders object itself.
     */
    public ShareCreateSnapshotHeaders withSnapshot(String snapshot) {
        this.snapshot = snapshot;
        return this;
    }

    /**
     * Get the eTag value.
     *
     * @return the eTag value.
     */
    public String eTag() {
        return this.eTag;
    }

    /**
     * Set the eTag value.
     *
     * @param eTag the eTag value to set.
     * @return the ShareCreateSnapshotHeaders object itself.
     */
    public ShareCreateSnapshotHeaders withETag(String eTag) {
        this.eTag = eTag;
        return this;
    }

    /**
     * Get the lastModified value.
     *
     * @return the lastModified value.
     */
    public OffsetDateTime lastModified() {
        if (this.lastModified == null) {
            return null;
        }
        return this.lastModified.dateTime();
    }

    /**
     * Set the lastModified value.
     *
     * @param lastModified the lastModified value to set.
     * @return the ShareCreateSnapshotHeaders object itself.
     */
    public ShareCreateSnapshotHeaders withLastModified(OffsetDateTime lastModified) {
        if (lastModified == null) {
            this.lastModified = null;
        } else {
            this.lastModified = new DateTimeRfc1123(lastModified);
        }
        return this;
    }

    /**
     * Get the requestId value.
     *
     * @return the requestId value.
     */
    public String requestId() {
        return this.requestId;
    }

    /**
     * Set the requestId value.
     *
     * @param requestId the requestId value to set.
     * @return the ShareCreateSnapshotHeaders object itself.
     */
    public ShareCreateSnapshotHeaders withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }

    /**
     * Get the version value.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version value.
     *
     * @param version the version value to set.
     * @return the ShareCreateSnapshotHeaders object itself.
     */
    public ShareCreateSnapshotHeaders withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the date value.
     *
     * @return the date value.
     */
    public OffsetDateTime date() {
        if (this.date == null) {
            return null;
        }
        return this.date.dateTime();
    }

    /**
     * Set the date value.
     *
     * @param date the date value to set.
     * @return the ShareCreateSnapshotHeaders object itself.
     */
    public ShareCreateSnapshotHeaders withDate(OffsetDateTime date) {
        if (date == null) {
            this.date = null;
        } else {
            this.date = new DateTimeRfc1123(date);
        }
        return this;
    }
}
